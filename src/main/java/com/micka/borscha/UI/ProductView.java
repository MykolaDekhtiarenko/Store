package com.micka.borscha.UI;//======================================================
// Source code generated by jvider v1.8.1 UNREGISTERED version.
// http://www.jvider.com/
//======================================================
import com.micka.borscha.Entities.Order;
import com.micka.borscha.Entities.Supply;
import com.micka.borscha.Services.OrderService;
import com.micka.borscha.Services.SupplyService;
import com.micka.borscha.View.ProductToOrderView;
import com.micka.borscha.View.ProductToSUpplyView;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.util.ArrayList;

/**
 * @author  Administrator
 * @created April 3, 2018
 */
public class ProductView extends JFrame
{
    JTable tableProductToDelivery;
    JButton back;
    Supply supply;
    Order order;
    SupplyService supplyService;
    OrderService orderService;
    /**
     */


    /**
     */
    public ProductView(Supply supply)
    {
        supplyService = new SupplyService();
        this.supply = supply;

        //headers for the tableProductToDelivery
        String[] columns = new String[] {
                "Id", "Price", "Amount", "Name"
        };

        //actual data for the tableProductToDelivery in a 2d array




        //create tableProductToDelivery with data
        tableProductToDelivery = new JTable();
        final DefaultTableModel tableModel = (DefaultTableModel)tableProductToDelivery.getModel();
        tableModel.setColumnIdentifiers(columns);


        ArrayList<ProductToSUpplyView> productToSUpplyViews = supplyService.getAllProductsBySupplyId(supply);

        for(ProductToSUpplyView product: productToSUpplyViews){
            Object[] rowData = new Object[]{
                    product.getId(),product.getPrice(),product.getAmount(),product.getName()
            };
            tableModel.addRow(rowData);
        }

        tableProductToDelivery.setModel(tableModel);


        back = new JButton("Back");
        //add the tableProductToDelivery to the frame
        this.add(new JScrollPane(tableProductToDelivery));
        this.setTitle("Product in Delivery");
        this.setDefaultCloseOperation(this.DISPOSE_ON_CLOSE);
        this.pack();
        this.setVisible(true);
    }

    public ProductView(Order order){
        orderService = new OrderService();
        this.order = order;

        //headers for the tableProductToDelivery
        String[] columns = new String[] {
                "Id", "Amount", "Name"
        };

        //actual data for the tableProductToDelivery in a 2d array




        //create tableProductToDelivery with data
        tableProductToDelivery = new JTable();
        final DefaultTableModel tableModel = (DefaultTableModel)tableProductToDelivery.getModel();
        tableModel.setColumnIdentifiers(columns);


        ArrayList<ProductToOrderView> productToSUpplyViews = orderService.getAllProductsByOrderId(order);

        for(ProductToOrderView product: productToSUpplyViews){
            Object[] rowData = new Object[]{
                    product.getId(),product.getAmount(),product.getName()
            };
            tableModel.addRow(rowData);
        }

        tableProductToDelivery.setModel(tableModel);


        back = new JButton("Back");
        //add the tableProductToDelivery to the frame
        this.add(new JScrollPane(tableProductToDelivery));
        this.setTitle("Product in Delivery");
        this.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        this.pack();
        this.setVisible(true);
    }
    }

